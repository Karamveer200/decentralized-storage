{
	"compiler": {
		"version": "0.8.22+commit.4fc1097e"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [],
				"stateMutability": "nonpayable",
				"type": "constructor"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "address",
						"name": "uploader",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "fileId",
						"type": "uint256"
					}
				],
				"name": "FileRemoved",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "fileId",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "string",
						"name": "fileName",
						"type": "string"
					},
					{
						"indexed": false,
						"internalType": "string",
						"name": "fileType",
						"type": "string"
					},
					{
						"indexed": false,
						"internalType": "bytes32",
						"name": "fileHash",
						"type": "bytes32"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "fileSize",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "uploadTime",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "address",
						"name": "uploader",
						"type": "address"
					}
				],
				"name": "FileUploaded",
				"type": "event"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_nodeAddress",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "_initialStorage",
						"type": "uint256"
					}
				],
				"name": "addNode",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"name": "allNodes",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "string[]",
						"name": "stringArray",
						"type": "string[]"
					}
				],
				"name": "createHash",
				"outputs": [
					{
						"internalType": "bytes32",
						"name": "",
						"type": "bytes32"
					}
				],
				"stateMutability": "pure",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_nodeAddress",
						"type": "address"
					},
					{
						"internalType": "string",
						"name": "_fileId",
						"type": "string"
					}
				],
				"name": "deleteChunkInNode",
				"outputs": [
					{
						"internalType": "string",
						"name": "",
						"type": "string"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_fileId",
						"type": "uint256"
					}
				],
				"name": "deleteFile",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_chunkSize",
						"type": "uint256"
					}
				],
				"name": "findAvailableNode",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "getAllNodes",
				"outputs": [
					{
						"internalType": "address[]",
						"name": "",
						"type": "address[]"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_nodeAddress",
						"type": "address"
					}
				],
				"name": "getNodeByAddress",
				"outputs": [
					{
						"components": [
							{
								"internalType": "address",
								"name": "nodeAddress",
								"type": "address"
							},
							{
								"internalType": "uint256",
								"name": "availableStorage",
								"type": "uint256"
							}
						],
						"internalType": "struct NodeManager.Node",
						"name": "",
						"type": "tuple"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "maxChunkSize",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"name": "nodes",
				"outputs": [
					{
						"internalType": "address",
						"name": "nodeAddress",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "availableStorage",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "numMaxChunksDuplication",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "owner",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_nodeAddress",
						"type": "address"
					},
					{
						"internalType": "string",
						"name": "_fileId",
						"type": "string"
					}
				],
				"name": "retrieveChunkInNode",
				"outputs": [
					{
						"internalType": "string",
						"name": "",
						"type": "string"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_fileId",
						"type": "uint256"
					}
				],
				"name": "retrieveFile",
				"outputs": [
					{
						"internalType": "bytes32",
						"name": "",
						"type": "bytes32"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_nodeAddress",
						"type": "address"
					},
					{
						"internalType": "string",
						"name": "_chunk",
						"type": "string"
					}
				],
				"name": "storeChunkInNode",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "string[]",
						"name": "_chunksArr",
						"type": "string[]"
					},
					{
						"internalType": "string",
						"name": "_fileName",
						"type": "string"
					},
					{
						"internalType": "string",
						"name": "_fileType",
						"type": "string"
					},
					{
						"internalType": "string",
						"name": "_fileEncoding",
						"type": "string"
					},
					{
						"internalType": "uint256",
						"name": "_uniqueId",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "_fileSize",
						"type": "uint256"
					}
				],
				"name": "storeFile",
				"outputs": [
					{
						"internalType": "address[]",
						"name": "",
						"type": "address[]"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "_fileHash",
						"type": "bytes32"
					},
					{
						"internalType": "uint256",
						"name": "_uniqueId",
						"type": "uint256"
					}
				],
				"name": "storeFileHash",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "string",
						"name": "_fileName",
						"type": "string"
					},
					{
						"internalType": "string",
						"name": "_fileType",
						"type": "string"
					},
					{
						"internalType": "bytes32",
						"name": "_fileHash",
						"type": "bytes32"
					},
					{
						"internalType": "string",
						"name": "_fileEncoding",
						"type": "string"
					},
					{
						"internalType": "address[]",
						"name": "_fileStorageNodeAddress",
						"type": "address[]"
					},
					{
						"internalType": "uint256",
						"name": "_uniqueId",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "_fileSize",
						"type": "uint256"
					}
				],
				"name": "storeFileMetadata",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_nodeAddress",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "_newStorage",
						"type": "uint256"
					}
				],
				"name": "updateAvailableStorage",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			}
		],
		"devdoc": {
			"kind": "dev",
			"methods": {},
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"contracts/_FileStorage.sol": "FileStorageManager"
		},
		"evmVersion": "shanghai",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"contracts/_ChunkManager.sol": {
			"keccak256": "0x2b58e7c988e41db8eb68d679a9c335b9e7cb1c6cebbd8ccdbc3ae28608719313",
			"license": "GPL-3.0",
			"urls": [
				"bzz-raw://6ffe08f1a7ec6c757a34827ef9a4df95f974b4a72bfd7cabb23c59de92139718",
				"dweb:/ipfs/QmdL2RV9oTHe86HpkhCgjQTHCcckbSpVyzVQDFYwuv8orz"
			]
		},
		"contracts/_FileStorage.sol": {
			"keccak256": "0x6e19868e8ca235b9bb8cac0aaf983653a05e570f2d43b526cdab536b76a04514",
			"license": "GPL-3.0",
			"urls": [
				"bzz-raw://076ee85ee47f93bc629b6e25135bbd9d9fe933629a6b50f75a512abbc022438b",
				"dweb:/ipfs/QmUqhrHUZzUw1Qx1JBCxoYpGAT6Yp6dB9aAYHqwfGDw2PJ"
			]
		},
		"contracts/_NodeManager.sol": {
			"keccak256": "0xd50fd8931b58ad8afa1ab1630bd6865dcef021ebce86e9e4aa5d3e452625a93e",
			"license": "GPL-3.0",
			"urls": [
				"bzz-raw://10139ee9abdfd505fa018781b035c6b33298164ae7995bd3074b80251bdb3ed4",
				"dweb:/ipfs/QmbGMRVaQ49cc1xscFMZkjKBYx9yc4EexbLfcJbNEXZzL7"
			]
		}
	},
	"version": 1
}