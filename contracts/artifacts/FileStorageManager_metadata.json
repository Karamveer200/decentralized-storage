{
	"compiler": {
		"version": "0.8.22+commit.4fc1097e"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [],
				"stateMutability": "nonpayable",
				"type": "constructor"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "address",
						"name": "uploader",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "string",
						"name": "fileId",
						"type": "string"
					}
				],
				"name": "FileRemoved",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "string",
						"name": "fileId",
						"type": "string"
					},
					{
						"indexed": false,
						"internalType": "string",
						"name": "fileName",
						"type": "string"
					},
					{
						"indexed": false,
						"internalType": "string",
						"name": "fileType",
						"type": "string"
					},
					{
						"indexed": false,
						"internalType": "bytes32",
						"name": "fileHash",
						"type": "bytes32"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "fileSize",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "uploadTime",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "address",
						"name": "uploader",
						"type": "address"
					}
				],
				"name": "FileUploaded",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"name": "logAddress",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"name": "logAddress2",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"name": "logNumber",
				"type": "event"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_nodeAddress",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "_initialStorage",
						"type": "uint256"
					}
				],
				"name": "addNode",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"name": "allNodes",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "string[]",
						"name": "stringArray",
						"type": "string[]"
					}
				],
				"name": "createHash",
				"outputs": [
					{
						"internalType": "bytes32",
						"name": "",
						"type": "bytes32"
					}
				],
				"stateMutability": "pure",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_nodeAddress",
						"type": "address"
					},
					{
						"internalType": "string",
						"name": "_fileId",
						"type": "string"
					}
				],
				"name": "deleteChunkInNode",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "string",
						"name": "_fileId",
						"type": "string"
					}
				],
				"name": "deleteFile",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_chunkSize",
						"type": "uint256"
					},
					{
						"internalType": "address[]",
						"name": "chunkStorageNodeTempAddress",
						"type": "address[]"
					}
				],
				"name": "findAvailableNode",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "getAllNodes",
				"outputs": [
					{
						"internalType": "address[]",
						"name": "",
						"type": "address[]"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_nodeAddress",
						"type": "address"
					}
				],
				"name": "getNodeByAddress",
				"outputs": [
					{
						"components": [
							{
								"internalType": "address",
								"name": "nodeAddress",
								"type": "address"
							},
							{
								"internalType": "uint256",
								"name": "availableStorage",
								"type": "uint256"
							}
						],
						"internalType": "struct NodeManager.Node",
						"name": "",
						"type": "tuple"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "maxChunkSize",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "string",
						"name": "",
						"type": "string"
					},
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"name": "nodeChunksAddresses",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"name": "nodes",
				"outputs": [
					{
						"internalType": "address",
						"name": "nodeAddress",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "availableStorage",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "numMaxChunksDuplication",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "owner",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "string",
						"name": "_fileId",
						"type": "string"
					}
				],
				"name": "retrieveChunkNodeAddresses",
				"outputs": [
					{
						"internalType": "address[]",
						"name": "",
						"type": "address[]"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "string",
						"name": "_fileId",
						"type": "string"
					}
				],
				"name": "retrieveFileDetails",
				"outputs": [
					{
						"components": [
							{
								"components": [
									{
										"internalType": "string",
										"name": "fileId",
										"type": "string"
									},
									{
										"internalType": "string",
										"name": "fileName",
										"type": "string"
									},
									{
										"internalType": "string",
										"name": "fileType",
										"type": "string"
									},
									{
										"internalType": "bytes32",
										"name": "fileHash",
										"type": "bytes32"
									},
									{
										"internalType": "uint256",
										"name": "fileSize",
										"type": "uint256"
									},
									{
										"internalType": "uint256",
										"name": "uploadTime",
										"type": "uint256"
									},
									{
										"internalType": "address",
										"name": "ownerAddress",
										"type": "address"
									},
									{
										"internalType": "string",
										"name": "fileEncoding",
										"type": "string"
									}
								],
								"internalType": "struct FileStorageManager.FileMetadata",
								"name": "file",
								"type": "tuple"
							},
							{
								"internalType": "address[]",
								"name": "chunkNodeAddresses",
								"type": "address[]"
							}
						],
						"internalType": "struct FileStorageManager.FileRetrieve",
						"name": "",
						"type": "tuple"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_nodeAddress",
						"type": "address"
					},
					{
						"internalType": "string",
						"name": "_chunk",
						"type": "string"
					},
					{
						"internalType": "string",
						"name": "_fileId",
						"type": "string"
					},
					{
						"internalType": "uint256",
						"name": "order",
						"type": "uint256"
					}
				],
				"name": "storeChunkInNode",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "string[]",
						"name": "_chunksArr",
						"type": "string[]"
					},
					{
						"internalType": "string",
						"name": "_fileName",
						"type": "string"
					},
					{
						"internalType": "string",
						"name": "_fileType",
						"type": "string"
					},
					{
						"internalType": "string",
						"name": "_fileEncoding",
						"type": "string"
					},
					{
						"internalType": "string",
						"name": "_uniqueId",
						"type": "string"
					},
					{
						"internalType": "uint256",
						"name": "_fileSize",
						"type": "uint256"
					}
				],
				"name": "storeFile",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "_fileHash",
						"type": "bytes32"
					},
					{
						"internalType": "string",
						"name": "_uniqueId",
						"type": "string"
					}
				],
				"name": "storeFileHash",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			}
		],
		"devdoc": {
			"kind": "dev",
			"methods": {},
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"contracts/_FileStorage.sol": "FileStorageManager"
		},
		"evmVersion": "shanghai",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"contracts/_ChunkManager.sol": {
			"keccak256": "0x42c2af194ab893aae834efb3f71b1ffe4505efe7220fe88ce9993c4bb71394df",
			"license": "GPL-3.0",
			"urls": [
				"bzz-raw://b22c9e81b3c35cc129505e7bbddef6899a2a05cc74952ac650b224b93d9036c2",
				"dweb:/ipfs/QmYkCpY52tWvBA8FxqhgHtNhbjxA1vJNYyim7r3D9TvD2J"
			]
		},
		"contracts/_FileStorage.sol": {
			"keccak256": "0x774ec55b331eb20918575b980bd05b0e4f2857d138d12783861bdf0818e0a941",
			"license": "GPL-3.0",
			"urls": [
				"bzz-raw://6a80e3204bb94acfdcf7e4b1359a176718e7db35606bb4a69dd614a2c1aae0ea",
				"dweb:/ipfs/Qmb4Uuzakq7Vyr5GGuqLxhajJWy48SDjwsZBx56d9fhe5S"
			]
		},
		"contracts/_NodeManager.sol": {
			"keccak256": "0x1db877a6a9af5fb4066aad4c6b680d8049f0edae7cfd26b276d747deade17fb5",
			"license": "GPL-3.0",
			"urls": [
				"bzz-raw://80aa0585c78776e9efc3b7c5fdedb37bea3e669d38106833e561c18ce26745a1",
				"dweb:/ipfs/QmdV6XdJitz7MQNGNHhzbm3zBfpQ74xSTbAS567HiWSky9"
			]
		},
		"hardhat/console.sol": {
			"keccak256": "0x7434453e6d3b7d0e5d0eb7846ffdbc27f0ccf3b163591263739b628074dc103a",
			"license": "MIT",
			"urls": [
				"bzz-raw://49355f780520494d1d5a0f01858385e51bb5280ce0ecfb960f16995065dca395",
				"dweb:/ipfs/QmSwJ6C5QLz6xKeQZS8wbwjU1KxRFTYfwbGmtzisd5sRW4"
			]
		}
	},
	"version": 1
}