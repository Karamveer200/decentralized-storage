{
	"compiler": {
		"version": "0.8.22+commit.4fc1097e"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"name": "logAddress",
				"type": "event"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_nodeAddress",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "_initialStorage",
						"type": "uint256"
					}
				],
				"name": "addNode",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"name": "allNodes",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_nodeAddress",
						"type": "address"
					},
					{
						"internalType": "string",
						"name": "_fileId",
						"type": "string"
					}
				],
				"name": "deleteChunkInNode",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_chunkSize",
						"type": "uint256"
					}
				],
				"name": "findAvailableNode",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "getAllNodes",
				"outputs": [
					{
						"internalType": "address[]",
						"name": "",
						"type": "address[]"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_nodeAddress",
						"type": "address"
					}
				],
				"name": "getNodeByAddress",
				"outputs": [
					{
						"components": [
							{
								"internalType": "address",
								"name": "nodeAddress",
								"type": "address"
							},
							{
								"internalType": "uint256",
								"name": "availableStorage",
								"type": "uint256"
							}
						],
						"internalType": "struct NodeManager.Node",
						"name": "",
						"type": "tuple"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					},
					{
						"internalType": "string",
						"name": "",
						"type": "string"
					}
				],
				"name": "nodeChunks",
				"outputs": [
					{
						"internalType": "string",
						"name": "",
						"type": "string"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"name": "nodes",
				"outputs": [
					{
						"internalType": "address",
						"name": "nodeAddress",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "availableStorage",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_nodeAddress",
						"type": "address"
					},
					{
						"internalType": "string",
						"name": "_fileId",
						"type": "string"
					}
				],
				"name": "retrieveChunkInNode",
				"outputs": [
					{
						"internalType": "string",
						"name": "",
						"type": "string"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_nodeAddress",
						"type": "address"
					},
					{
						"internalType": "string",
						"name": "_chunk",
						"type": "string"
					},
					{
						"internalType": "string",
						"name": "_fileId",
						"type": "string"
					}
				],
				"name": "storeChunkInNode",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			}
		],
		"devdoc": {
			"kind": "dev",
			"methods": {},
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"contracts/_NodeManager.sol": "NodeManager"
		},
		"evmVersion": "shanghai",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"contracts/_NodeManager.sol": {
			"keccak256": "0x95ff19aa64be732888b09788ebc3020eeb2b467b2403f63561b4d91703719d8e",
			"license": "GPL-3.0",
			"urls": [
				"bzz-raw://047c9d5adb16cf042840ecb97cc927dc96ab06373babef6b8058de101e0218ae",
				"dweb:/ipfs/QmdRCsRDu838mcagQezZMroVVSFCkyJ4dYS1k2saGX4fNF"
			]
		}
	},
	"version": 1
}